install.packages("swirl")
ls
name <- "John"
age <- 40
name
age
clear
rnorm(40)
rnorm(40,0,1)
dfexo1 <- c(gaussienne,uniforme,poisson,exp,chi2,binom,cauchy)
dfexo1 <- c(gaussienne,uniforme,poisson,exp,chi2,binom,cauchy)
dfexo1 <- c(rnorm(40),uniforme,poisson,exp,chi2,binom,cauchy)
source("~/Documents/1A_ENSIIE/S2/Stat/tp1/tp1.R")
source("~/Documents/1A_ENSIIE/S2/Stat/tp1/tp1.R")
swirl::install_course("The R Programming Environment")
swirl()
library("swirl")
swirl()
5+7
library("swirl")
swirl()
c(0.5,55,-10,6)
num_vect <- c(0.5,55,-10,6)
library("swirl")
swirl()
x <- c(44,NA,5,NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
sample(c(y,z),100)
my_data <- sample(c(y,z),100)
is.na(my_data)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
my_vector <- 1:20
my_vecotr
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
matrix(data=1:20,nrow = 4, ncol = 5)
my_matrix2<-matrix(data=1:20,nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient","age","weight","bp","rating","test")
colnames(cnames)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
library("swirl")
swirl()
fdjkqfjkq
library("swirl")
swirl()
swirl()
library(readr)
datapath
print(datapath)
datafile <-
f
datafile <- file.path(datapath)
datafile <- file.path(datapath,"urban.csv.gz")
dfq
fq
data
read_csv(urban)
read_csv(urban)
read_builtin()
nxt
nxt()
urban <- read_csv("urban")
datapath
datapath
library("swirl")
swirl()
pause()
play()
qui()
quit()
?setwd
ls()
ls()
getwd()
ls'('
ls()
load("Documents/1A_ENSIIE/S2/Stat/tp1/tp1.R")
dfexo1 <- data.frame(rnorm(40,mean=0,std=1),runif(40,min=0,max=1),rpois(40,1),rexp(40,rate=1),rchisq(40,df=3),rbinom(40,3,0.5), rcauchy(40,location=0,scale=1))
dfexo1 <- data.frame(rnorm(40,mean=0,1),runif(40,min=0,max=1),rpois(40,1),rexp(40,rate=1),rchisq(40,df=3),rbinom(40,3,0.5), rcauchy(40,location=0,scale=1))
dfexo1
?write.csv
write.csv(dfexo1,file="exo1.csv")
setwd("Documents/1A_ENSIIE/S2/Stat/tp1/")
write.csv(dfexo1,file="exo1.csv")
ls()
plot(10,gauss10)
gauss10 <- rnorm(10,0,1)
plot(10,gauss10)
plot(1:10,gauss10)
abline(h=1)
abline(h=-1)
plot(1:100,gauss10)
plot(1:100,gauss10)
gauss100 <- rnorm(100,0,1)
plot(1:100,gauss100)
gauss1000 <- rnorm(1000,0,1)
plot(1:1000,gauss1000)
read.csv("distribution_inconnue.csv")
plot(distrib_inconnue)
distrib_inconnue <- read.csv("distribution_inconnue.csv")
plot(distrib_inconnue)
hist(gauss100)
hist(gauss100,breaks=3,freq=10)
hist(gauss100,breaks=10,freq=10)
hist(gauss100)
hist(gauss100)
data_matrix <- matrix(data)
?avg
?esp
esperance <- mean(distrib_inconnue)
esperance <- mean(distrib_inconnue[,2])
box <- boxplot(distrib_inconnue)
hist(distrib_inconnue)
hist <- hist(distrib_inconnue[,2])
box <- boxplot(distrib_inconnue[,2])
setwd("~/Documents/1A_ENSIIE/S2/Stat/tp2")
x<-rexp(20,0.5);
vraiDensite <-max(x)
vraiDensite
x<-rexp(20,0.5);
vraiDensite <-ceil(max(x))
x<-rexp(20,0.5);
vraiDensite <-ceiling(max(x))
vraiDensite
x<-rexp(20,0.5);
vraiDensite <-ceiling(max(x))
hist(x);
lines(dexp(seq(vraiDensite),0.5) ,col="green");
x<-rexp(20,0.5);
hist(x);
vraiDensite <-ceiling(max(x))
lines(dexp(seq(vraiDensite),0.5) ,col="green");
vraiDensite <-ceiling(max(x))
lines(dexp(seq(vraiDensite),0.5) ,col="green");
x<-rexp(20,0.5);
hist(x);
x<-rexp(20,0.5);
hist(x);
vraiDensite <-ceiling(max(x))
lines(dexp(seq(vraiDensite),0.5)*20 ,col="green");
x<-rexp(20,0.5);
hist(x);
maxValue <-ceiling(max(x))
lines(dexp(seq(0,maxValue),0.5)*20 ,col="green");
?seq
x<-rexp(20,0.5);
hist(x);
maxValue <-ceiling(max(x))
lines(dexp(seq(0:maxValue),0.5)*20 ,col="green");
x<-rexp(20,0.5);
hist(x);
maxValue <-ceiling(max(x))
lines(dexp(seq(0,maxValue,by=1 ),0.5)*20 ,col="green");
x<-rexp(20,0.5);
hist(x);
maxValue <-ceiling(max(x))
lines(dexp(stats::dexp(0.5) ,col="green");
?dexp
x<-rexp(20,0.5);
hist(x);
dexp()
x<-rexp(20,0.5);
hist(x);
dexp(dexp(y , rate=.5), from = 0  , to = 20)
x<-rexp(20,0.5);
hist(x);
dexp(dexp(x,rate=.5),from = 0,to = 20)
x<-rexp(20,0.5);
hist(x);
curve(dexp(x, rate = .5), from=0, to=10, col='blue')
maxValue <-ceiling(max(x))
x<-rexp(20,0.5);
hist(x);
curve(dexp(x,rate=1/2), xlim=c(1,50))
maxValue <-ceiling(max(x))
x<-rexp(20,0.5)
hist(x)
y <- dexp(c(1,50),rate=1/2)
maxValue <-ceiling(max(x))
lines(y,col="blue")
x<-rexp(20,0.5)
hist(x)
y <- dexp(c(1,20),rate=1/2)
maxValue <-ceiling(max(x))
lines(y,col="blue")
x<-rexp(20,0.5)
hist(x)
exp <- function(x){
.5*exp(-.5*x);
}
lines(exp,col="blue");
?dexp
x<-rexp(20,0.5)
hist(x)
exp <- function(x){
.5*exp(-.5*x);
}
lines(dexp(0:10, 0.5), col="green"
x<-rexp(20,0.5)
hist(x)
exp <- function(x){
.5*exp(-.5*x);
}
lines(dexp(0:10, 0.5), col="green");
x<-rexp(20,0.5)
hist(x)
lines(dexp(0:10, 0.5), col="green")
x<-rexp(20,0.5)
hist(x, freq=FALSE)
lines(dexp(0:10, 0.5), col="green",)
x<-rexp(20,0.5)
hist(x, freq=FALSE)
lines(0:10,dexp(0:10, 0.5), col="green",)
?lines
x<-rexp(20,0.5)
maxValue <- ceiling(x);
hist(x, freq=FALSE)
lines(0:10,dexp(0:10, 0.5), col="green",)
x<-rexp(20,0.5)
maxValue <- max(ceiling(x));
hist(x, freq=FALSE)
lines(0:10,dexp(0:10, 0.5), col="green",)
x<-rexp(20,0.5)
maxValue <- ceiling(max(x));
hist(x, freq=FALSE)
lines(0:10,dexp(0:10, 0.5), col="green",)
x<-rexp(20,0.5)
maxValue <- ceiling(max(x));
hist(x, freq=FALSE)
lines(0:maxValue,dexp(0:maxValue, 0.5), col="green",)
x<-rexp(20,0.5)
maxValue <- ceiling(max(x));
hist(x, freq=FALSE)
lines(0:maxValue,dexp(0:maxValue, 0.5), col="green",)
x<-rexp(20,0.5)
maxValue <- ceiling(max(x));
hist(x, freq=FALSE)
lines(0:maxValue,dexp(0:maxValue, 0.5), col="green",)
x<-rexp(20,0.5)
maxValue <- ceiling(max(x));
hist(x, freq=FALSE)
lines(0:maxValue,dexp(0:maxValue, 0.5), col="green",)
x <- runif(10, -1, 1)
max <- max(x)
# 2. Répétez les deux étapes ci-dessus dix fois, en écrivant le maximum de l’échantillon à chaque fois. Commentez la variabilité des valeurs que vous obtenez pour les maxima de votre échantillon.
for (i in 1:10) {
x <- runif(10, -1, 1)
}
# 3. Répétez 100 fois et construisez un histogramme et une boîte à moustaches. Quelle est la loi dumaximum, M = max 1≤i≤n X i où X i ∼ U(−1, 1) (TD1) ? Superposer la densité théoreique sur l’histogramme. Que remarquez-vous ?
for (i in 1:100) {
x <- runif(10, -1, 1)
boxplot(x)
}
# 4. Augmentez la taille de votre échantillon à 50 et répétez votre expérience. Que remarquez-vous? Sont-ils proches de la symétrie ?
x <- runif(50, -1, 1)
for (i in 1:100) {
x <- runif(10, -1, 1)
boxplot(x)
par(mfrow=c(3,2))
}
par(mfrow=c(3,2))
for (i in 1:100) {
x <- runif(10, -1, 1)
boxplot(x)
}
par(mfrow=c(10,10))
for (i in 1:100) {
x <- runif(10, -1, 1)
boxplot(x)
}
par(mfrow=c(5,5))
for (i in 1:100) {
x <- runif(10, -1, 1)
boxplot(x)
}
par(mfrow=c(4,4))
for (i in 1:100) {
x <- runif(10, -1, 1)
boxplot(x)
}
par(mfrow=c(4,4))
for (i in 1:100) {
x <- runif(10, -1, 1)
hist(x)
boxplot(x)
}
par(mfrow=c(4,4))
for (i in 1:100) {
x <- runif(10, -1, 1)
hist(x, horizontal=TRUE)
boxplot(x)
}
par(mfrow=c(4,4))
for (i in 1:100) {
x <- runif(10, -1, 1)
hist(x)
boxplot(x, horizontal = TRUE)
}
